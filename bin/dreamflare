#!/usr/bin/env ruby
###############################################################################
#
# Description: dreamflare - sync dreamhost DNS to cloudflare
#
#
# Author: David https://commscentral.net/
#
###############################################################################

# Load configuration (use relative to prevent loading in other places)
require_relative '../config.rb'

# set default path and
$LOAD_PATH << File.expand_path(File.dirname(__FILE__) + '/../lib')
require 'dreamflare.rb'

# setup our namespace
include Dreamflare

# query dreamhost
dream_host = DHAPIQuery.new(DHKEY)
puts('--------------Querying Dreamhost API ---------------')
matching_dh_zones = dream_host.query('dns-list_records')

# query cloudflare
cloud_flare = CFAPIQuery.new(CFKEY, CFEMAIL)
puts('--------------Querying CloudFlare API ---------------')
matching_cf_zones = cloud_flare.query(CFZoneID, 'dns_records')

# cloud_flare.update_record('')

puts '---'
puts 'Successfully obtained dns records in each system'
puts 'Searching through dreamhost records to ensure they exist and match on cloudflare'
puts '---'

# create the compare class assignments
compare_zones = CompareZones.new(cloud_flare, matching_dh_zones, matching_cf_zones)
compare_zones.perform_compare

## TODO
# check if each record in dreamhost exists in CF and if they match
